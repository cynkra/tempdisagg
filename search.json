[{"path":"http://cynkra.github.io/tempdisagg/articles/hf-disagg.html","id":"convert-between-any-frequency","dir":"Articles","previous_headings":"","what":"Convert between any frequency","title":"Temporal Disaggregation to High-Frequency","text":"Since version 1.0, tempdisagg can convert frequencies, e.g., can disaggregate monthly series daily. longer restricted regular conversions, low frequency period number high frequency periods. Instead, low frequency period (e.g. month) can contain number high-frequency periods (e.g. 31, 28 29 days). Thanks Roger Kissling Stella Sim suggested idea. can convert months days, also years days, weeks seconds, academic years seconds, lunar years hours, … downside computation time depends number observations. Thus, longer high-frequency series, computation may take .","code":""},{"path":"http://cynkra.github.io/tempdisagg/articles/hf-disagg.html","id":"quarterly-to-daily-disaggregation","dir":"Articles","previous_headings":"","what":"Quarterly to daily disaggregation","title":"Temporal Disaggregation to High-Frequency","text":"following, try disaggregate quarterly GDP Switzerland hypothetical daily GDP series. example series shipped package. dealing daily data, keep data data.frame, rather ts object. time series objects, xts tsibble, possible well. conversion visualization, use tsbox package.","code":"library(tempdisagg) data(tempdisagg) head(gdp.q) #>         time    value #> 1 2005-01-01 133101.3 #> 2 2005-04-01 136320.4 #> 3 2005-07-01 137693.7 #> 4 2005-10-01 139475.9 #> 5 2006-01-01 139204.7 #> 6 2006-04-01 141112.5 library(tsbox) ts_plot(gdp.q, title = \"Swiss GDP\", subtitle = \"real, not seasonally adjusted\")"},{"path":"http://cynkra.github.io/tempdisagg/articles/hf-disagg.html","id":"no-indicator","dir":"Articles","previous_headings":"","what":"No indicator","title":"Temporal Disaggregation to High-Frequency","text":"models without indicator series, method = \"fast\" uses Chow-Lin method rho parameter value close 1. numerically close theoretically preferable Denton-Cholette method much faster. Faster, stated , relative meaning; following calculation still takes seconds: daily GDP much lower monthly GDP, scale series mean standard deviation:  Like disaggregation methods tempdisagg, resulting series fulfills aggregation constraint:","code":"m.d.noind <- td(gdp.q ~ 1, to = \"daily\", method = \"fast\") summary(m.d.noind) #>  #> Call: #> td(formula = gdp.q ~ 1, to = \"daily\", method = \"fast\") #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -20275.5  -6704.0    371.7  10125.2  22872.8  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)    #> (Intercept)   1704.2      517.6   3.292   0.0017 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> 'chow-lin-fixed' disaggregation with 'sum' conversion #> 59 low-freq. obs. converted to 5386 high-freq. obs. #> Adjusted R-squared: 0.09057  AR1-Parameter:     1 gdp.d.noind <- predict(m.d.noind) ts_plot(   ts_scale(     ts_c(gdp.d.noind, gdp.q)   ),   title = \"Daily disaggregated GDP\",   subtitle = \"no indicator\" ) all.equal(ts_frequency(gdp.d.noind, \"quarter\", aggregate = \"sum\"), gdp.q) #> [1] TRUE"},{"path":"http://cynkra.github.io/tempdisagg/articles/hf-disagg.html","id":"stock-market-data-as-an-indicator","dir":"Articles","previous_headings":"","what":"Stock market data as an indicator","title":"Temporal Disaggregation to High-Frequency","text":"refined disaggregation, one several indicator series may used. following, use Swiss stock market data disaggregate GDP. Data stock market index, SMI, also included tempdisagg:  Weekend holiday values interpolated, td allow presence missing values. interpolate raw data, see ?spi.d. following uses Chow-Lin method disaggregate series. high rho parameter takes account two series unlikely co-integrated. results much volatile estimation daily GDP:","code":"ts_plot(spi.d, title = \"Swiss Performance Index\", subtitle = \"daily values, interpolated\") m.d.stocks <- td(gdp.q ~ spi.d, method = \"chow-lin-fixed\", fixed.rho = 0.9) summary(m.d.stocks) #>  #> Call: #> td(formula = gdp.q ~ spi.d, method = \"chow-lin-fixed\", fixed.rho = 0.9) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -10656  -1760   1076   3796   8891  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 1.320e+03  2.856e+01   46.22   <2e-16 *** #> spi.d       5.512e-02  3.735e-03   14.76   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> 'chow-lin-fixed' disaggregation with 'sum' conversion #> 59 low-freq. obs. converted to 5493 high-freq. obs. #> Adjusted R-squared: 0.7928   AR1-Parameter:   0.9 gdp.d.stocks <- predict(m.d.stocks) ts_plot(   ts_scale(     ts_c(gdp.d.stocks, gdp.q)   ),   title = \"Daily disaggregated GDP\",   subtitle = \"one indicator\" )"},{"path":"http://cynkra.github.io/tempdisagg/articles/intro.html","id":"disaggregating-annual-data-to-quarterly","dir":"Articles","previous_headings":"","what":"Disaggregating annual data to quarterly","title":"Temporal Disaggregation of Time Series","text":"Suppose annual series want create quarterly values sum annual values. Let us explore annual sales pharmaceutical chemical industry Switzerland, want create quarterly series.","code":"library(tempdisagg) data(swisspharma) plot(sales.a)"},{"path":"http://cynkra.github.io/tempdisagg/articles/intro.html","id":"no-indicator","dir":"Articles","previous_headings":"","what":"No indicator","title":"Temporal Disaggregation of Time Series","text":"simple method denton-cholette without indicator. performs simple interpolation meets temporal additivity constraint. R, can done following way: td() produces object class \"td\". formula, 'sales.~ 1', indicates low frequency variable disaggregated constant. resulting quarterly values sales can extracted predict() function: additional information quarterly movements, resulting series smooth:","code":"m1 <- td(sales.a ~ 1, to = \"quarterly\", method = \"denton-cholette\") predict(m1) plot(predict(m1))"},{"path":"http://cynkra.github.io/tempdisagg/articles/intro.html","id":"using-additional-information","dir":"Articles","previous_headings":"","what":"Using additional information","title":"Temporal Disaggregation of Time Series","text":"purely mathematical approach easy perform need data series, economic value resulting series may limited. might related quarterly series follows similar movement sales. example, may use quarterly exports pharmaceutical chemical products:  use one indicator denton-cholette denton method, intercept must specified missing formula (~ 0). Contrary first example, argument redundant, destination frequency can interfered time series properties exports.q. resulting model leads much interesting series:  indicator series longer annual series, extrapolation period, quarterly sales forecasted. indicator, denton-cholette method simply transfers movement indicator resulting series. Even fact correlation two series, strong similarity indicator resulting series.","code":"plot(exports.q) m2 <- td(sales.a ~ 0 + exports.q, method = \"denton-cholette\") plot(predict(m2))"},{"path":"http://cynkra.github.io/tempdisagg/articles/intro.html","id":"regression-based-disaggregation","dir":"Articles","previous_headings":"","what":"Regression based disaggregation","title":"Temporal Disaggregation of Time Series","text":"contrast, regression based methods transfer movement indicator series resulting series actually correlated annual level. example, Chow-Lin regression problem can performed following way: chow-lin-maxlog default method, need specified. Like corresponding lm method, summary() produces overview regression: indeed strong correlation exports sales, assumed example . coefficient exports.q highly significant, high adjusted R-squared points strong relationship two variables. coefficients result GLS regression annual series. estimation AR1 parameter, rho, estimated negative; order avoid undesirable side-effects negative rho, truncated 0. feature can turned : , can extract resulting quarterly series sales:  Like regression based methods, chow-lin-maxlog can also used one indicator series (imports.q significant 10% level following example, probably help produce accurate temporal disaggregation):","code":"m3 <- td(sales.a ~ exports.q) summary(m3) #>  #> Call: #> td(formula = sales.a ~ exports.q) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -77.892  -7.711  -4.628   9.647  36.448  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 1.241e+01  1.493e+00   8.311 1.06e-09 *** #> exports.q   1.339e-02  1.672e-04  80.111  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> 'chow-lin-maxlog' disaggregation with 'sum' conversion #> 36 low-freq. obs. converted to 158 high-freq. obs. #> Adjusted R-squared: 0.9946   AR1-Parameter:     0 (truncated) td(sales.a ~ exports.q, truncated.rho = -1) #>  #> Call: #> td(formula = sales.a ~ exports.q, truncated.rho = -1) #>  #> Coefficients: #> (Intercept)    exports.q   #>    12.31579      0.01341   #>  #> Use summary() for details.  #> Use predict() to extract the final series. #>        #> Use ?td to see the help file. plot(predict(m3)) m4 <- td(formula = sales.a ~ exports.q + imports.q) summary(m4) #>  #> Call: #> td(formula = sales.a ~ exports.q + imports.q) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -61.648  -7.139  -2.825   5.508  53.373  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 11.685855   1.493077   7.827 5.08e-09 *** #> exports.q    0.011258   0.001158   9.723 3.26e-11 *** #> imports.q    0.003934   0.002113   1.862   0.0716 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> 'chow-lin-maxlog' disaggregation with 'sum' conversion #> 36 low-freq. obs. converted to 158 high-freq. obs. #> Adjusted R-squared: 0.9949   AR1-Parameter:     0 (truncated)"},{"path":"http://cynkra.github.io/tempdisagg/articles/intro.html","id":"comparison-of-methods","dir":"Articles","previous_headings":"","what":"Comparison of methods","title":"Temporal Disaggregation of Time Series","text":"example, actually know true data quarterly sales, can compare artificial values true values:  indicator series, Denton method Chow-Lin produce series close true series. , course, due fact example, exports good indicator sales. indicator less close series interest, resulting series less close true series.","code":"plot(sales.q) lines(predict(m2), col = \"blue\") # Denton-Cholette lines(predict(m3), col = \"red\") # Chow-Lin"},{"path":"http://cynkra.github.io/tempdisagg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christoph Sax. Author, maintainer. Peter Steiner. Author. Tommaso Di Fonzo. Contributor.","code":""},{"path":"http://cynkra.github.io/tempdisagg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sax C, Steiner P (2013). “Temporal Disaggregation Time Series.” R Journal, 5(2), 80–87. doi:10.32614/RJ-2013-028.","code":"@Article{,   title = {Temporal Disaggregation of Time Series},   author = {Christoph Sax and Peter Steiner},   journal = {The R Journal},   year = {2013},   volume = {5},   number = {2},   pages = {80--87},   doi = {10.32614/RJ-2013-028}, }"},{"path":"http://cynkra.github.io/tempdisagg/index.html","id":"tempdisagg-methods-for-temporal-disaggregation-and-interpolation-of-time-series","dir":"","previous_headings":"","what":"Methods for Temporal Disaggregation and Interpolation of Time Series","title":"Methods for Temporal Disaggregation and Interpolation of Time Series","text":"Temporal disaggregation methods used disaggregate interpolate low frequency time series higher frequency series, either sum, average, first last value resulting high frequency series consistent low frequency series. Temporal disaggregation can performed without one high frequency indicator series. Contains methods Chow-Lin, Santos-Silva-Cardoso, Fernandez, Litterman, Denton Denton-Cholette. Supports R time series classes.","code":""},{"path":"http://cynkra.github.io/tempdisagg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Methods for Temporal Disaggregation and Interpolation of Time Series","text":"install update CRAN, run: install development version: article temporal disaggregation time series R-Journal describes package theory temporal disaggregation detail. Please report bugs Github send e-mail, thank !","code":"install.packages(\"tempdisagg\") # install.packages(\"pak\") pak::pak(\"cynkra/tempdisagg\")"},{"path":"http://cynkra.github.io/tempdisagg/reference/exports.m.html","id":null,"dir":"Reference","previous_headings":"","what":"Trade and Sales of Chemical and Pharmaceutical Industry — exports.m","title":"Trade and Sales of Chemical and Pharmaceutical Industry — exports.m","text":"data set contains monthly quarterly imports exports chemical pharmaceutical industry Switzerland (millions Swiss Francs) well quarterly annual sales (Index).","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/exports.m.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trade and Sales of Chemical and Pharmaceutical Industry — exports.m","text":"time series object class \"ts\". number observations depends frequency.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/exports.m.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Trade and Sales of Chemical and Pharmaceutical Industry — exports.m","text":"Import Export Data Swiss Federal Customs Administration. Sales Data Swiss Federal Statistical Office.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/gdp.q.html","id":null,"dir":"Reference","previous_headings":"","what":"Gross Domestic Product — gdp.q","title":"Gross Domestic Product — gdp.q","text":"Qarterly real GDP, seasonally adjusted, millions Swiss Francs (2010 prices).","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/gdp.q.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gross Domestic Product — gdp.q","text":"data.frame.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/gdp.q.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gross Domestic Product — gdp.q","text":"State Secretariat Economic Affairs (SECO).","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/gdp.q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gross Domestic Product — gdp.q","text":"","code":"if (FALSE) { # \\dontrun{ # recreate the series with latest data library(tsbox) library(dplyr) library(dataseries) library(imputeTS) dataseries::ds(\"ch_seco_gdp.nsa.real.gdp\") %>%   ts_default() %>%   ts_span(start = 2005) } # }"},{"path":"http://cynkra.github.io/tempdisagg/reference/plot.td.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual Plot for Temporal Disaggregation — plot.td","title":"Residual Plot for Temporal Disaggregation — plot.td","text":"plot method class \"td\". Plot fitted actual low frequency series, residuals.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/plot.td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual Plot for Temporal Disaggregation — plot.td","text":"","code":"# S3 method for class 'td' plot(x, ...)"},{"path":"http://cynkra.github.io/tempdisagg/reference/plot.td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual Plot for Temporal Disaggregation — plot.td","text":"x object class \"td\", usually, result call td(). ... arguments passed methods.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/plot.td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual Plot for Temporal Disaggregation — plot.td","text":"returns two panel plot side effect, showing fitted actual low frequency series, residuals.","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/plot.td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual Plot for Temporal Disaggregation — plot.td","text":"","code":"data(swisspharma)  mod2 <- td(sales.a ~ imports.q + exports.q) plot(mod2)"},{"path":"http://cynkra.github.io/tempdisagg/reference/predict.td.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for Temporal Disaggregation — predict.td","title":"Predict Method for Temporal Disaggregation — predict.td","text":"Compute disaggregated interpolated (extrapolated) high frequency series temporal disaggregation.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/predict.td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for Temporal Disaggregation — predict.td","text":"","code":"# S3 method for class 'td' predict(object, ...)"},{"path":"http://cynkra.github.io/tempdisagg/reference/predict.td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for Temporal Disaggregation — predict.td","text":"object object class \"td\", usually, result call td(). ... arguments passed methods.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/predict.td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for Temporal Disaggregation — predict.td","text":"summary.td returns vector \"ts\" object, containing disaggregated interpolated high frequency series temporal disaggregation.","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/predict.td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for Temporal Disaggregation — predict.td","text":"","code":"data(swisspharma)  mod1 <- td(sales.a ~ imports.q + exports.q) predict(mod1) #>           Qtr1      Qtr2      Qtr3      Qtr4 #> 1972  30.92086  31.23889  29.78171  32.27067 #> 1973  32.35422  32.84792  32.85784  34.10196 #> 1974  39.47025  40.69984  38.46029  36.65510 #> 1975  35.11779  34.82041  32.48789  34.27624 #> 1976  37.84629  39.02815  36.56478  37.61685 #> 1977  39.02275  40.29747  38.39476  38.46743 #> 1978  39.91169  40.32615  37.84439  39.12545 #> 1979  40.22602  41.56706  39.74015  40.80078 #> 1980  44.36652  42.40236  40.30860  41.40814 #> 1981  46.70267  46.24630  45.14263  45.77303 #> 1982  47.69230  46.36110  44.27635  47.92717 #> 1983  48.32801  49.44826  47.72594  49.98212 #> 1984  54.29249  52.95530  51.77884  55.25427 #> 1985  58.20494  59.59345  55.37611  56.14366 #> 1986  59.41189  60.66635  56.15659  56.15913 #> 1987  60.76145  59.90612  56.70150  60.15124 #> 1988  64.79898  64.68233  61.86525  65.99558 #> 1989  70.89945  73.52238  66.35911  71.16761 #> 1990  78.71726  74.62123  68.95746  71.27231 #> 1991  78.40595  77.23900  72.80115  76.71982 #> 1992  87.00256  82.54501  76.50704  79.43290 #> 1993  88.32953  89.08146  82.58598  84.40946 #> 1994 101.20532  94.90136  91.35798  95.32699 #> 1995 102.60870 102.26878  97.64144  97.48108 #> 1996 107.40253 106.96596 102.57931 104.65037 #> 1997 111.57414 120.00760 111.98507 118.37374 #> 1998 122.59313 122.10487 114.51589 114.54841 #> 1999 123.98198 125.05152 125.93892 138.62481 #> 2000 138.10540 131.69691 131.03569 132.81834 #> 2001 158.41534 160.63385 149.05655 150.57611 #> 2002 168.07819 178.66158 163.31288 153.55086 #> 2003 182.05333 172.76757 165.73091 170.75742 #> 2004 190.76797 184.13570 179.19775 177.64244 #> 2005 191.92244 200.03597 190.51025 194.82819 #> 2006 214.80078 213.48976 206.32029 220.08415 #> 2007 257.97842 254.05432 249.19027 243.70797 #> 2008 253.97254 269.25485 251.37049 225.77347 #> 2009 258.22217 260.67116 265.51948 261.22649 #> 2010 257.38264 253.43862 240.03877 237.44964 #> 2011 270.77999 262.67096"},{"path":"http://cynkra.github.io/tempdisagg/reference/spi.d.html","id":null,"dir":"Reference","previous_headings":"","what":"SPI Swiss Performance Index — spi.d","title":"SPI Swiss Performance Index — spi.d","text":"Daily values stock market index.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/spi.d.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SPI Swiss Performance Index — spi.d","text":"data.frame.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/spi.d.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SPI Swiss Performance Index — spi.d","text":"Swiss National Bank (SNB)","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/spi.d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SPI Swiss Performance Index — spi.d","text":"","code":"if (FALSE) { # \\dontrun{ # recreate the series with latest data library(tsbox) library(dplyr) library(dataseries) library(imputeTS) dataseries::ds(\"ch_snb_capchstocki.gdr\") %>%   ts_default() %>%   ts_regular() %>%   imputeTS::na_interpolation(option = \"spline\") %>%   ts_span(start = 2005) } # }"},{"path":"http://cynkra.github.io/tempdisagg/reference/summary.td.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of a Temporal Disaggregation — summary.td","title":"Summary of a Temporal Disaggregation — summary.td","text":"summary method class \"td\".","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/summary.td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of a Temporal Disaggregation — summary.td","text":"","code":"# S3 method for class 'td' summary(object, ...)  # S3 method for class 'summary.td' print(   x,   digits = max(3, getOption(\"digits\") - 3),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"http://cynkra.github.io/tempdisagg/reference/summary.td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of a Temporal Disaggregation — summary.td","text":"object object class \"td\", usually, result call td(). ... arguments passed methods. x object class \"summary.td\", usually, result call summary.td. digits number significant digits use printing. signif.stars logical. TRUE, 'significance stars' printed coefficient.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/summary.td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of a Temporal Disaggregation — summary.td","text":"summary.td returns list containing summary statistics included object, computes following additional statistics: n_l number low frequency observations n number high frequency observations ar_l empirical auto-correlation low frequency series coefficients named matrix containing coefficients, standard deviations, t-values p-values print method prints summary output similar way method \"lm\".","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/summary.td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of a Temporal Disaggregation — summary.td","text":"","code":"data(swisspharma)  mod1 <- td(sales.a ~ imports.q + exports.q) summary(mod1) #>  #> Call: #> td(formula = sales.a ~ imports.q + exports.q) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -61.648  -7.139  -2.825   5.508  53.373  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 11.685855   1.493077   7.827 5.08e-09 *** #> imports.q    0.003934   0.002113   1.862   0.0716 .   #> exports.q    0.011258   0.001158   9.723 3.26e-11 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> 'chow-lin-maxlog' disaggregation with 'sum' conversion #> 36 low-freq. obs. converted to 158 high-freq. obs. #> Adjusted R-squared: 0.9949\tAR1-Parameter:     0 (truncated)  mod2 <- td(sales.a ~ 0, to = \"quarterly\", method = \"uniform\") summary(mod2) #>  #> Call: #> td(formula = sales.a ~ 0, to = \"quarterly\", method = \"uniform\") #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #>  132.7  205.6  330.9  625.9 1041.6  #>  #> No Coefficients #>  #> 'uniform' disaggregation with 'sum' conversion #> 36 low-freq. obs. converted to 144 high-freq. obs. #> criterion: additive \torder of differencing 'h': 0"},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal Aggregation of Time Series — ta","title":"Temporal Aggregation of Time Series — ta","text":"Performs temporal aggregation high low frequency time series. Currently, ta works ts mts time series objects.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal Aggregation of Time Series — ta","text":"","code":"ta(x, ...)  # S3 method for class 'ts' ta(x, conversion = \"sum\", to = \"annual\", ...)"},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal Aggregation of Time Series — ta","text":"x time series object class \"ts\" \"mts\". ... additional arguments, passed methods. conversion type conversion: \"sum\", \"average\", \"first\" \"last\". (low-frequency) destination frequency character string (\"annual\" \"quarterly\") scalar (e.g. 1, 2, 4).","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal Aggregation of Time Series — ta","text":"ta returns object class \"ts\" \"mts\", depending class input series.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporal Aggregation of Time Series — ta","text":"ta used aggregate high frequency time series low frequency series, latter either sum, average, first last value high-frequency series. ta inverse function td(). applied output series td, ta yields original series.","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/ta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal Aggregation of Time Series — ta","text":"","code":"data(swisspharma)  sales.q.a <- ta(sales.q, conversion = \"sum\", to = \"annual\") all.equal(sales.a, sales.q.a) #> [1] TRUE"},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal Disaggregation of Time Series — td","title":"Temporal Disaggregation of Time Series — td","text":"Perform temporal disaggregation interpolation low frequency high frequency time series. td can used objects class \"ts\", numeric vectors ts-boxable time series object.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal Disaggregation of Time Series — td","text":"","code":"td(   formula,   conversion = \"sum\",   to = \"quarterly\",   method = \"chow-lin-maxlog\",   truncated.rho = 0,   fixed.rho = 0.5,   criterion = \"proportional\",   h = 1,   start = NULL,   end = NULL,   ... )"},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal Disaggregation of Time Series — td","text":"formula object class \"formula\": symbolic description temporal disaggregation model. details model specification given 'Details'. conversion type conversion: \"sum\", \"mean\" (: \"average\"), \"first\" \"last\". high-frequency destination frequency character string (\"quarter\" (\"quarterly\"), \"month\" (\"monthly\"), \"day\", \"hour\", \"minute\", \"second\", \"year\") scalar (e.g. 2, 4, 7, 12). Required right hand side indicator series provided. tsbox package must installed deal frequencies monthly quarterly. input series numeric, scalar indicating frequency ratio. method method temporal disaggregation: \"chow-lin-maxlog\", \"chow-lin-minrss-ecotrim\", \"chow-lin-minrss-quilis\", \"chow-lin-fixed\", \"dynamic-maxlog\" (experimental), \"dynamic-minrss\" (experimental), \"dynamic-fixed\" (experimental), \"fernandez\", \"litterman-maxlog\", \"litterman-minrss\", \"litterman-fixed\", \"denton-cholette\", \"denton\", \"fast\", \"uniform\" \"ols\". See 'Details'. truncated.rho lower bound autoregressive parameter \\(\\rho\\). set 0 (default), negative values allowed. set -1, truncation disabled. fixed.rho set predefined autoregressive parameter \\(\\rho\\). works methods \"chow-lin-fixed\" \"litterman-fixed\". criterion minimzation criterion Denton methods: \"proportional\" \"additive\".  See 'Details'. h degree differencing Denton methods. See 'Details'. start (optional) start date. Similar pre-processing input series window(). end (optional) end date. Similar pre-processing input series window(). ... additional arguments passed low level subfunctions.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal Disaggregation of Time Series — td","text":"td returns object class \"td\". function predict() computes interpolated high frequency series. high-frequency indicator series longer low-frequency series, resulting series extrapolated. function coefficients extracts coefficients. function residuals extracts low frequency residuals. function summary() prints summary estimation. object class \"td\" list containing following components: values disaggregated interpolated (extrapolated) high frequency series fitted.values low frequency fitted values regression; low frequency indicator Denton methods. p preliminary high frequency series residuals low-frequency residuals rho autoregressive parameter, \\(\\rho\\) truncated logical, whether \\(\\rho\\) truncated coefficients named vector coefficients se standard errors coefficients s_2 ML-estimator variance high-frequency residuals s_2_gls GLS-estimator variance high-frequency residuals tss weighted (low frequency) total sum squares rss weighted (low frequency) residual sum squares r.squared R squared adj.r.squared adjusted R squared logl log-likelihood aic Akaike information criterion bic Schwarz information criterion rank number right hand variables (including intercept) df degrees freedom method method temporal disaggregation call function call name name low frequency variable fr ratio high low-frequency series conversion type temporal conversion actual actual values low frequeny series model matrix containing indicators (constant present) criterion minimization criterion Denton methods h order differencing Denton methods","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporal Disaggregation of Time Series — td","text":"td used disaggregate interpolate low frequency higher frequency time series, either sum, average, first last value resulting high-frequency series consistent low frequency series. Disaggregation can performed without help one right hand side indicator series. can deal regular disaggregation setting (e.g. quarters months) also irregular disaggregation setting (e.g. months days), respects different lengths months. high-frequency indicator(s) cover(s) longer time span low-frequency series, extrapolation retropolation (Wei, 1994, p. 138) performed, using model interpolation. selection temporal disaggregation model similar selection linear regression model. Thus, td closely mirrors working lm() function. left hand side formula() denotes low-frequency series, right hand side indicators. indicator specified, right hand side must set equal 1 (see examples). Unlike lm, td handles ts() mts time-series objects, typical application involves use objects. Alternatively, used basic vectors, argument specifies ratio high low frequency series. generalized least squares (GLS) methods \"chow-lin-maxlog\", \"chow-lin-minrss-ecotrim\", \"chow-lin-minrss-quilis\", \"litterman-maxlog\" \"litterman-minrss\", autoregressive parameter \\(\\rho\\) estimated. Default (recommended) method chow-lin-maxlog. truncated.rho = 0 (default), produces good results wide range applications. two variants chow-lin-minrss approach lead different results: Ecotrim Barcellan (2003) uses correlation matrix instead variance covariance matrix (implemented \"chow-lin-minrss-ecotrim\"), Matlab library Quilis (2009) multiplies correlation matrix \\(1/(1-\\rho^2)\\) (implemented \"chow-lin-minrss-quilis\"). methods \"dynamic-maxlog\", \"dynamic-minrss\" \"dynamic-fixed\" dynamic extensions Chow-Lin (Santos Silva Cardoso, 2001). autoregressive parameter \\(\\rho\\) equal 0, truncation remainder added. Denton methods \"denton\" \"denton-cholette\" can specified one without indicator. parameter h can set equal 0, 1, 2. Depending value, denton procedure minimizes sum squares deviations levels (0), first differences (1) second differences (2) indicator resulting series. Additionally, criterion can set equal \"proportional\" \"additive\", depending whether proportional absolute deviations considered minimzation. \"denton-cholette\" removes transient movement original \"denton\" method beginning resulting series.  \"fast\" shortcut \"chow-lin-fixed\" fixed.rho = 0.99999. returns approximately results \"denton-cholette\" h = 1, much faster. \"uniform\" special case \"denton\" approach, h equals  0 criterion equals  \"additive\". distributes residuals uniformly. indicator used, leads step-shaped series. \"ols\" performs ordinary least squares regression (OLS) distributes residuals uniformly. especially useful comparing estimators GLS OLS regressions.","code":""},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Temporal Disaggregation of Time Series — td","text":"Chow, G. C., & Lin, . L. (1971). Best linear unbiased interpolation, distribution, extrapolation time series related series. review Economics Statistics, 372-375. Denton, F. T. (1971). Adjustment monthly quarterly series annual totals: approach based quadratic minimization. Journal American Statistical Association, 66(333), 99-102. Santos Silva, J. M. C. & Cardoso, F. N. (2001). Chow-Lin method using dynamic models. Economomic Modelling, 18, 269-280. Wei, W. W. S. (1994). Time series analysis. Addison-Wesley publ. Sax, C. und Steiner, P. (2013). Temporal Disaggregation Time Series. R Journal, 5(2), 80-88. doi:10.32614/RJ-2013-028","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal Disaggregation of Time Series — td","text":"","code":"data(tempdisagg)  # one indicator, no intercept mod1 <- td(sales.a ~ 0 + exports.q) summary(mod1)  # summary statistics #>  #> Call: #> td(formula = sales.a ~ 0 + exports.q) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -86.57  29.00  32.27  36.81  59.55  #>  #> Coefficients: #>            Estimate Std. Error t value Pr(>|t|)     #> exports.q 0.0141601  0.0003428   41.31   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> 'chow-lin-maxlog' disaggregation with 'sum' conversion #> 36 low-freq. obs. converted to 158 high-freq. obs. #> Adjusted R-squared: 0.9362\tAR1-Parameter: 0.862 plot(mod1)  # residual plot of regression  plot(predict(mod1))   # interpolated quarterly series  # temporally aggregated series is equal to the annual value all.equal(window(   ta(predict(mod1), conversion = \"sum\", to = \"annual\"),   start = 1975), sales.a) #> [1] TRUE  # several indicators, including an intercept mod2 <- td(sales.a ~ imports.q + exports.q)  # no indicator (Denton-Cholette) mod3 <- td(sales.a ~ 1, to = \"quarterly\", method = \"denton-cholette\")  # no indicator (uniform) mod4 <- td(sales.a ~ 1, to = \"quarterly\", method = \"uniform\")  # Dynamic Chow-Lin (Santos Silva and Cardoso, 2001) # (no truncation parameter added, because rho = 0) mod5 <- td(sales.a ~ exports.q, method = \"dynamic-maxlog\")  # Example from Denton (1971), see references. d.q <- ts(rep(c(50, 100, 150, 100), 5), frequency = 4) d.a <- ts(c(500, 400, 300, 400, 500))  a1 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"additive\", h = 0)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. a2 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"additive\", h = 1)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. a3 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"additive\", h = 2)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. a4 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"additive\", h = 3)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases.  p1 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"proportional\", h = 0)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. p2 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"proportional\", h = 1)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. p3 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"proportional\", h = 2)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases. p4 <- predict(td(d.a ~ 0 + d.q, method = \"denton\",                  criterion = \"proportional\", h = 3)) #> 'denton-cholette' removes the transient movement at the beginning of the series and is preferable to the original 'denton' method in most cases.  # Table in Denton (1971), page 101: round(cbind(d.q, a1, a2, a3, a4, p1, p2, p3, p4)) #>      d.q  a1  a2  a3  a4  p1  p2  p3  p4 #> 1 Q1  50  75  67  62  59  56  57  55  54 #> 1 Q2 100 125 127 125 123 122 124 122 120 #> 1 Q3 150 175 180 182 184 200 194 194 195 #> 1 Q4 100 125 126 130 134 122 125 129 132 #> 2 Q1  50  50  65  70  74  50  58  61  62 #> 2 Q2 100 100 105 106 107 100 107 109 111 #> 2 Q3 150 150 145 142 141 150 146 145 144 #> 2 Q4 100 100  85  81  78 100  89  85  83 #> 3 Q1  50  25  27  24  22  44  40  39  38 #> 3 Q2 100  75  73  72  71  78  74  73  72 #> 3 Q3 150 125 123 124 125 100 109 110 111 #> 3 Q4 100  75  78  80  81  78  77  78  79 #> 4 Q1  50  50  37  38  39  50  43  43  43 #> 4 Q2 100 100  96  96  96 100  94  94  94 #> 4 Q3 150 150 154 155 154 150 153 154 153 #> 4 Q4 100 100 112 112 111 100 110 110 110 #> 5 Q1  50  75  69  68  67  56  58  58  58 #> 5 Q2 100 125 124 123 123 122 123 121 122 #> 5 Q3 150 175 178 178 178 200 190 189 190 #> 5 Q4 100 125 129 132 132 122 129 131 130  if (FALSE) { # \\dontrun{  # Using altvernative time series classes (see https://docs.ropensci.org/tsbox/) library(tsbox) sales.a.xts <- ts_xts(window(sales.a, start = 2000)) exports.q.xts <- ts_xts(window(exports.q, start = 2000)) mod1b <- td(sales.a.xts ~ 0 + exports.q.xts) predict(mod1b)  # class 'xts'  # non-standard frequencies: decades to years predict(td(ts_xts(uspop) ~ 1, \"mean\", to = \"year\", method = \"fast\"))  # quarter to daily (no indicator) m.d.noind <- td(gdp.q ~ 1, to = \"daily\", method = \"fast\") predict(m.d.noind)  # quarter to daily (one indicator) m.d.stocks <- td(gdp.q ~ spi.d, method = \"chow-lin-fixed\", fixed.rho = 0.9) predict(m.d.stocks) } # }"},{"path":"http://cynkra.github.io/tempdisagg/reference/tempdisagg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for Temporal Disaggregation and Interpolation of Time Series — tempdisagg-package","title":"Methods for Temporal Disaggregation and Interpolation of Time Series — tempdisagg-package","text":"Temporal disaggregation methods used disaggregate interpolate low frequency time series higher frequency series, either sum, average, first last value resulting high frequency series consistent low frequency series. Temporal disaggregation can performed without one high frequency indicator series. good way start introductory vignette: vignette(\"intro\", \"tempdisagg\") article temporal disaggregation time series (doi:10.32614/RJ-2013-028 ) R-Journal describes package theory temporal disaggregation detail.","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/reference/tempdisagg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for Temporal Disaggregation and Interpolation of Time Series — tempdisagg-package","text":"Christoph Sax christoph.sax@gmail.com, Peter Steiner","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-111","dir":"Changelog","previous_headings":"","what":"tempdisagg 1.1.1","title":"tempdisagg 1.1.1","text":"CRAN release: 2023-08-08","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"minor-changes-1-1-1","dir":"Changelog","previous_headings":"","what":"minor changes","title":"tempdisagg 1.1.1","text":"Fix tests R devel","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-11-2023-03-08","dir":"Changelog","previous_headings":"","what":"tempdisagg 1.1 (2023-03-08)","title":"tempdisagg 1.1 (2023-03-08)","text":"CRAN release: 2023-03-09","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"minor-changes-1-1","dir":"Changelog","previous_headings":"","what":"minor changes","title":"tempdisagg 1.1 (2023-03-08)","text":"Use GHA instead Travis","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"tempdisagg 1.1 (2023-03-08)","text":"Adjustment work latest version tsbox","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"documentation-1-1","dir":"Changelog","previous_headings":"","what":"documentation","title":"tempdisagg 1.1 (2023-03-08)","text":"?td: uniform uses criterion = “additive”","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-10-2020-02-07","dir":"Changelog","previous_headings":"","what":"tempdisagg 1.0 (2020-02-07)","title":"tempdisagg 1.0 (2020-02-07)","text":"CRAN release: 2020-02-07","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"major-changes-1-0","dir":"Changelog","previous_headings":"","what":"major changes","title":"tempdisagg 1.0 (2020-02-07)","text":"works now time series classes, supported tsbox package. disagregation possible frequencies (e.g., monthly daily). Disaggregation takes account calendar, e.g., fact February shorter months. (#30) new method: “fast”, shortcut chow-lin-fixed fixed.rho = 0.99999. method returns approximately results “denton-cholette”, much faster. (#14) new vignettes: intro tempdisagg, disaggregation high frequency","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"under-the-hood-1-0","dir":"Changelog","previous_headings":"","what":"under the hood","title":"tempdisagg 1.0 (2020-02-07)","text":"supports three modes: tsbox, ts, numeric markdown roxygen, NEWS.md testthat infrastructure","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"changes-visible-to-the-user-0-25","dir":"Changelog","previous_headings":"","what":"changes visible to the user","title":"tempdisagg 0.25 (2016-07-10)","text":"new methods: “dynamic-maxlog”, “dynamic-minrss”, “dynamic-fixed”, described Santos Silva Cardoso, 2001. Many thanks Tommaso Di Fonzo providing blueprint written GAUSS. updated documentation include new methods.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"minor-changes-0-25","dir":"Changelog","previous_headings":"","what":"minor changes","title":"tempdisagg 0.25 (2016-07-10)","text":"better checks non-time-series inputs. (https://github.com/christophsax/tempdisagg/issues/20) added extensive numerical testing travis.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"bug-fixes-0-25","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"tempdisagg 0.25 (2016-07-10)","text":"ta() returns correct results conversion “last” “first”, first last period incomplete. (https://github.com/christophsax/tempdisagg/issues/22)","code":""},{"path":[]},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"changes-visible-to-the-user-0-24","dir":"Changelog","previous_headings":"","what":"changes visible to the user:","title":"tempdisagg 0.24 (2014-12-07)","text":"retropolation: ‘td’ performs extra- retropolation high frequency series covers larger time span low frequency series. low frequency values ignored series longer high frequency series (warning). suggestion use ‘denton-cholette’ original ‘denton’ method chosen.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-023-2014-01-11","dir":"Changelog","previous_headings":"","what":"tempdisagg 0.23 (2014-01-11)","title":"tempdisagg 0.23 (2014-01-11)","text":"CRAN release: 2014-01-11","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"changes-visible-to-the-user-0-23","dir":"Changelog","previous_headings":"","what":"changes visible to the user","title":"tempdisagg 0.23 (2014-01-11)","text":"R-Journal article temporal disaggregation explains tempdisagg detail. Links included package description, help files README file.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"minor-changes-0-23","dir":"Changelog","previous_headings":"","what":"minor changes","title":"tempdisagg 0.23 (2014-01-11)","text":"warning ta() time series contains internal NAs. formating tweaks help files.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-022-2013-08-07","dir":"Changelog","previous_headings":"","what":"tempdisagg 0.22 (2013-08-07)","title":"tempdisagg 0.22 (2013-08-07)","text":"CRAN release: 2013-08-04","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"changes-visible-to-the-user-0-22","dir":"Changelog","previous_headings":"","what":"changes visible to the user","title":"tempdisagg 0.22 (2013-08-07)","text":"$fitted.values ‘td’ object now containts low-frequency fitted values regression low-frequency indicator case Denton methods. values accessed fitted(). final high frequency series now stored $values. , values accessed predict(). Package overview (?tempdisagg) Demo (demo(tempdisagg)) argument ‘truncated.rho = 0’ instead ‘.neg = TRUE’. allows truncation values different 0. Default behavior 0.21.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"bug-fixes-0-22","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"tempdisagg 0.22 (2013-08-07)","text":"0.21, ta() produced error less low-frequency unit covered high frequency data. Now produces series containing NA. singular data matrix entered, new warning.","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"tempdisagg-021-2013-01-21","dir":"Changelog","previous_headings":"","what":"tempdisagg 0.21 (2013-01-21)","title":"tempdisagg 0.21 (2013-01-21)","text":"CRAN release: 2013-02-12","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"changes-visible-to-the-user-0-21","dir":"Changelog","previous_headings":"","what":"changes visible to the user","title":"tempdisagg 0.21 (2013-01-21)","text":"new methods available: “chow-lin-fixed” “litterman-fixed”. Using “fixed.rho” argument, autoregressive parameter may specified user. interface changes: “chow-lin-maxlog-ecotrim” “chow-lin-maxlog-quilis” defined new methods. need old ‘vcov’ argument anymore. new defaults: method = “chow-lin-maxlog”, neg.rho = FALSE positive values rho , chow-lin-maxlog method generally outperforms methods. relevant arguments directly entered td() summary output: neg.rho = FALSE negative rho truncated 0, indicator shown summary output. non time-series mode: optionally, standard vectors can used instead time series. case, frequency low frequency variable 1, fraction high frequency variable specified ‘’ argument updated help files","code":""},{"path":"http://cynkra.github.io/tempdisagg/news/index.html","id":"under-the-hood-0-21","dir":"Changelog","previous_headings":"","what":"under the hood","title":"tempdisagg 0.21 (2013-01-21)","text":"td() rewritten clear structure now. GLS Regressions performed new CalcGLS() function, uses QR-decomposition instead matrix-inversion. faster numerically stable. resolves issue wher large (small) numbers led ‘system computationally singular’ error.","code":""}]
